ggplot(mapping = aes(long, lat, group = group, fill = `Percent of Pop w/ Rx`)) +
labs(title = "Percent of Population Prescribed Schedule II Medications, by County")
geom_polygon(color = "#ffffff", size = .25)
full.rx %>%
filter("county_name" != "MA County")%>%
left_join(counties, by = "county_name") %>%
filter(state_name =="Massachusetts") %>%
filter(Year == 2018, Quarter == 1) %>%
ggplot(mapping = aes(long, lat, group = group, fill = `Percent of Pop w/ Rx`)) +
labs(title = "Percent of Population Prescribed Schedule II Medications, by County")+
geom_polygon(color = "#ffffff", size = .25)
full.rx %>%
filter("county_name" != "MA County")%>%
left_join(counties, by = "county_name") %>%
filter(state_name =="Massachusetts") %>%
filter(Year == 2018, Quarter == 1) %>%
ggplot(mapping = aes(long, lat, group = group, fill = `Percent of Pop w/ Rx`)) +
labs(title = "Percent of Population Prescribed Schedule II Medications, by County")+
coord_map(projection = "albers", lat0 = 39, lat1 = 45)+
geom_polygon(color = "#ffffff", size = .25)
full.rx %>%
filter("county_name" != "MA County")%>%
left_join(counties, by = "county_name") %>%
filter(state_name =="Massachusetts") %>%
filter(Year == 2018, Quarter == 1) %>%
ggplot(mapping = aes(long, lat, group = group, fill = `Percent of Pop w/ Rx`)) +
labs(title = "Percent of Population Prescribed Schedule II Medications, by County")+
coord_map(projection = "albers", lat0 = 39, lat1 = 45)+
geom_polygon(color = "#ffffff", size = .25) +
theme_void()
library(tidyverse)
library(devtools)
library(urbnmapr)
library(readxl)
library(viridis)
full.rx %>%
filter("county_name" != "MA County")%>%
left_join(counties, by = "county_name") %>%
filter(state_name =="Massachusetts") %>%
filter(Year == 2018, Quarter == 1) %>%
ggplot(mapping = aes(long, lat, group = group, fill = `Percent of Pop w/ Rx`)) +
labs(title = "Percent of Population Prescribed Schedule II Medications, by County")+
coord_map(projection = "albers", lat0 = 39, lat1 = 45)+
geom_polygon(color = "#ffffff", size = .25) +
theme_void()+
scale_fill_viridis()
full.rx %>%
filter("county_name" != "MA County")%>%
left_join(counties, by = "county_name") %>%
filter(state_name =="Massachusetts") %>%
filter(Year == 2018, Quarter == 1) %>%
ggplot(mapping = aes(long, lat, group = group, fill = `Percent of Pop w/ Rx`)) +
labs(title = "Percent of Population Prescribed Schedule II Medications, by County")+
coord_map(projection = "albers", lat0 = 39, lat1 = 45)+
geom_polygon(color = "#ffffff", size = .25) +
theme_void()
full.rx %>%
filter("county_name" != "MA County")%>%
left_join(counties, by = "county_name") %>%
filter(state_name =="Massachusetts") %>%
filter(Year == 2018, Quarter == 1) %>%
ggplot(mapping = aes(long, lat, group = group, fill = `Percent of Pop w/ Rx`)) +
labs(title = "Percent of Population Prescribed Schedule II Medications, by County")+
coord_map(projection = "albers", lat0 = 39, lat1 = 45)+
geom_polygon(color = "#ffffff", size = .25) +
theme_void() +
+
scale_fill_viridis(option = "plasma")
full.rx %>%
filter("county_name" != "MA County")%>%
left_join(counties, by = "county_name") %>%
filter(state_name =="Massachusetts") %>%
filter(Year == 2018, Quarter == 1) %>%
ggplot(mapping = aes(long, lat, group = group, fill = `Percent of Pop w/ Rx`)) +
labs(title = "Percent of Population Prescribed Schedule II Medications, by County")+
coord_map(projection = "albers", lat0 = 39, lat1 = 45)+
geom_polygon(color = "#ffffff", size = .25) +
theme_void() +
scale_fill_viridis(option = "plasma")
full.rx %>%
filter("county_name" != "MA County")%>%
left_join(counties, by = "county_name") %>%
filter(state_name =="Massachusetts") %>%
filter(Year == 2018, Quarter == 1) %>%
ggplot(mapping = aes(long, lat, group = group, fill = `Percent of Pop w/ Rx`)) +
labs(title = "Percent of Population Prescribed Schedule II Medications, by County")+
coord_map(projection = "albers", lat0 = 39, lat1 = 45)+
geom_polygon(color = "#ffffff", size = .25) +
theme_void()
full.rx %>%
filter("county_name" != "MA County")%>%
left_join(counties, by = "county_name") %>%
filter(state_name =="Massachusetts") %>%
filter(Year == 2018, Quarter == 1) %>%
ggplot(mapping = aes(long, lat, group = group, fill = `Percent of Pop w/ Rx`)) +
labs(title = "Percent of Population Prescribed Schedule II Medications, by County")+
coord_map(projection = "albers", lat0 = 39, lat1 = 45)+
geom_polygon(color = "#ffffff", size = .25) +
theme_void()+
scale_fill_manual()
full.rx %>%
filter("county_name" != "MA County")%>%
left_join(counties, by = "county_name") %>%
filter(state_name == "Massachusetts") %>%
filter(Year == 2018, Quarter == 1) %>%
ggplot(mapping = aes(long, lat, group = group, fill = `Percent of Pop w/ Rx`)) +
labs(title = "Percent of Population Prescribed Schedule II Medications, by County")+
coord_map(projection = "albers", lat0 = 39, lat1 = 45)+
geom_polygon(color = "#ffffff", size = .25) +
theme_void()
full.rx %>%
filter("county_name" != "MA County")%>%
left_join(counties, by = "county_name") %>%
filter(state_name == "Massachusetts") %>%
filter(Year == 2018, Quarter == 1) %>%
ggplot(mapping = aes(long, lat, group = group, fill = `Percent of County Pop w/ Rx`)) +
labs(title = "Percent of Population Prescribed Schedule II Medications, by County")+
coord_map(projection = "albers", lat0 = 39, lat1 = 45)+
geom_polygon(color = "#ffffff", size = .25) +
theme_void()
full.rx <- Rx.q1 %>%
full_join(Rx.q2) %>%
full_join(Rx.q3) %>%
full_join(Rx) %>%
set_names( c("County", "Population", "Total Rx", "Total Rx Units", "N.People w/ Rx", "Percent of County Pop w/ Rx", "Year", "Quarter")) %>%  #renaming all of the names
mutate(county_name = paste(County, "County"))  #mutating a new column, county_name...on the other side is the expression to make a row. paste from the currently existing column, "County," and then add the string "County". It's evaluated on a row by row basis.
colnames(full.rx)
full.rx %>%
filter("county_name" != "MA County")%>%
left_join(counties, by = "county_name") %>%
filter(state_name == "Massachusetts") %>%
filter(Year == 2018, Quarter == 1) %>%
ggplot(mapping = aes(long, lat, group = group, fill = `Percent of County Pop w/ Rx`)) +
labs(title = "Percent of Population Prescribed Schedule II Medications, by County")+
coord_map(projection = "albers", lat0 = 39, lat1 = 45)+
geom_polygon(color = "#ffffff", size = .25) +
theme_void()
library(tidyverse)
library(devtools)
library(urbnmapr)
library(readxl)
library(viridis)
# read in 2016-2019 data
Rx <- read_excel(
"MADPH_PMP.xlsx",
range = cell_cols("A:H") #cell_cols selects all rows associated w those columns
)
# read in 1st quarter of 2015
Rx.q1 <- read_excel(
"pmp-county-data-roll-q1-2015.xlsx",
range = "A5:F20"
)
Rx.q1 <- Rx.q1 %>%
mutate(Year = rep(2015, nrow(Rx.q1)))  %>% #creating a new column,"Year". For every row in the column "Year" in "Rx.q1," write "2015."
mutate(Quarter = rep(1, nrow(Rx.q1)))
# read in 2nd quarter of 2015
Rx.q2 <- read_excel(
"pmp-county-data-roll-q2-2015.xlsx",
range = "A5:F20"
)
Rx.q2 <- Rx.q2 %>%
mutate(Year = rep(2015, nrow(Rx.q2)))  %>% #creating a new column,"Year". For every row in the column "Year" in "Rx.q2," write "2015."
mutate(Quarter = rep(2, nrow(Rx.q2)))
# read in 3rd quarter of 2015
Rx.q3 <- read_excel(
"pmp-county-data-roll-q3-2015.xlsx",
range = "A5:F20"
)
Rx.q3 <- Rx.q3 %>%
mutate(Year = rep(2015, nrow(Rx.q3)))  %>% #creating a new column,"Year". For every row in the column "Year" in "Rx.q3," write "2015."
mutate(Quarter = rep(3, nrow(Rx.q3)))
full.rx <- Rx.q1 %>%
full_join(Rx.q2) %>%
full_join(Rx.q3) %>%
full_join(Rx) %>%
set_names( c("County", "Population", "Total Rx", "Total Rx Units", "N.People w/ Rx", "Percent of County Pop w/ Rx", "Year", "Quarter")) %>%  #renaming all of the names
mutate(county_name = paste(County, "County"))  #mutating a new column, county_name...on the other side is the expression to make a row. paste from the currently existing column, "County," and then add the string "County". It's evaluated on a row by row basis.
colnames(full.rx)
ggplot() +
geom_polygon(data = urbnmapr::states, mapping = aes(x = long, y = lat, group = group),
fill = "grey", color = "white") +
coord_map(projection = "albers", lat0 = 39, lat1 = 45)
household_data <- left_join(countydata, counties, by = "county_fips") #joining the dataframes countydata and counties by "county_fips"
household_data %>%
ggplot(aes(long, lat, group = group, fill = medhhincome)) +
geom_polygon(color = NA) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
labs(fill = "Median Household Income")
str(counties)
full.rx %>%
filter("county_name" != "MA County")%>%
left_join(counties, by = "county_name") %>%
filter(state_name == "Massachusetts") %>%
filter(Year == 2018, Quarter == 1) %>%
ggplot(mapping = aes(long, lat, group = group, fill = `Percent of County Pop w/ Rx`)) +
labs(title = "Percent of Population Prescribed Schedule II Medications, by County")+
coord_map(projection = "albers", lat0 = 39, lat1 = 45)+
geom_polygon(color = "#ffffff", size = .25) +
theme_void()
View(full.rx)
test <- c("#f2f0f7", "#dadaeb", "#bcbddc", "#9e9ac8", "#756bb1", "#54278f")
full.rx %>%
filter("county_name" != "MA County")%>%
left_join(counties, by = "county_name") %>%
filter(state_name == "Massachusetts") %>%
filter(Year == 2018, Quarter == 1) %>%
ggplot(mapping = aes(long, lat, group = group, fill = `Percent of County Pop w/ Rx`)) +
labs(title = "Percent of Population Prescribed Schedule II Medications, by County")+
coord_map(projection = "albers", lat0 = 39, lat1 = 45)+
geom_polygon(color = "#ffffff", size = .25) +
theme_void()+
scale_fill_gradientn(colors = test)
library(tidyverse)
library(devtools)
library(urbnmapr)
library(readxl)
library(viridis)
# read in 2016-2019 data
Rx <- read_excel(
"MADPH_PMP.xlsx",
range = cell_cols("A:H") #cell_cols selects all rows associated w those columns
)
# read in 1st quarter of 2015
Rx.q1 <- read_excel(
"pmp-county-data-roll-q1-2015.xlsx",
range = "A5:F20"
)
Rx.q1 <- Rx.q1 %>%
mutate(Year = rep(2015, nrow(Rx.q1)))  %>% #creating a new column,"Year". For every row in the column "Year" in "Rx.q1," write "2015."
mutate(Quarter = rep(1, nrow(Rx.q1)))
# read in 2nd quarter of 2015
Rx.q2 <- read_excel(
"pmp-county-data-roll-q2-2015.xlsx",
range = "A5:F20"
)
Rx.q2 <- Rx.q2 %>%
mutate(Year = rep(2015, nrow(Rx.q2)))  %>% #creating a new column,"Year". For every row in the column "Year" in "Rx.q2," write "2015."
mutate(Quarter = rep(2, nrow(Rx.q2)))
# read in 3rd quarter of 2015
Rx.q3 <- read_excel(
"pmp-county-data-roll-q3-2015.xlsx",
range = "A5:F20"
)
Rx.q3 <- Rx.q3 %>%
mutate(Year = rep(2015, nrow(Rx.q3)))  %>% #creating a new column,"Year". For every row in the column "Year" in "Rx.q3," write "2015."
mutate(Quarter = rep(3, nrow(Rx.q3)))
full.rx <- Rx.q1 %>%
full_join(Rx.q2) %>%
full_join(Rx.q3) %>%
full_join(Rx) %>%
set_names( c("County", "Population", "Total Rx", "Total Rx Units", "N.People w/ Rx", "Percent of County Pop w/ Rx", "Year", "Quarter")) %>%  #renaming all of the names
mutate(county_name = paste(County, "County"))  #mutating a new column, county_name...on the other side is the expression to make a row. paste from the currently existing column, "County," and then add the string "County". It's evaluated on a row by row basis.
colnames(full.rx)
ggplot() +
geom_polygon(data = urbnmapr::states, mapping = aes(x = long, y = lat, group = group),
fill = "grey", color = "white") +
coord_map(projection = "albers", lat0 = 39, lat1 = 45)
household_data <- left_join(countydata, counties, by = "county_fips") #joining the dataframes countydata and counties by "county_fips"
household_data %>%
ggplot(aes(long, lat, group = group, fill = medhhincome)) +
geom_polygon(color = NA) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
labs(fill = "Median Household Income")
str(counties)
test <- c("#f2f0f7", "#dadaeb", "#bcbddc", "#9e9ac8", "#756bb1", "#54278f")
full.rx %>%
filter("county_name" != "MA County")%>%
left_join(counties, by = "county_name") %>%
filter(state_name == "Massachusetts") %>%
filter(Year == 2018, Quarter == 1) %>%
ggplot(mapping = aes(long, lat, group = group, fill = `Percent of County Pop w/ Rx`)) +
labs(title = "Percent of Population Prescribed Schedule II Medications, by County")+
coord_map(projection = "albers", lat0 = 39, lat1 = 45)+
geom_polygon(color = "#ffffff", size = .25) +
theme_void() %>%
scale_fill_gradientn(colors = test)
test <- c("#f2f0f7", "#dadaeb", "#bcbddc", "#9e9ac8", "#756bb1", "#54278f")
full.rx %>%
filter("county_name" != "MA County")%>%
left_join(counties, by = "county_name") %>%
filter(state_name == "Massachusetts") %>%
filter(Year == 2018, Quarter == 1) %>%
ggplot(mapping = aes(long, lat, group = group, fill = `Percent of County Pop w/ Rx`)) +
labs(title = "Percent of Population Prescribed Schedule II Medications, by County")+
coord_map(projection = "albers", lat0 = 39, lat1 = 45)+
geom_polygon(color = "#ffffff", size = .25) +
theme_void() +
scale_fill_gradientn(colors = test)
full.rx %>%
mutate(ma.p = filter(pmp.all, year == year, quarter == quarter, county == "MA")$`% receiving`) %>%
left_join(counties, by = "county_name") %>%
filter(state_name == "Massachusetts") %>%
filter(Year == 2018, Quarter == 1) %>%
ggplot(mapping = aes(long, lat, group = group, fill = `Percent of County Pop w/ Rx`)) +
labs(title = "Percent of Population Prescribed Schedule II Medications, by County")+
coord_map(projection = "albers", lat0 = 39, lat1 = 45)+
geom_polygon(color = "#ffffff", size = .25) +
theme_void() +
scale_fill_gradientn(colors = test)
full.rx %>%
mutate(ma.p = filter(full.rx, year == year, quarter == quarter, county == "MA")$`% receiving`)
full.rx %>%
mutate(ma.p = filter(full.rx, Year == Year, Quarter == Quarter, county == "MA")$`% receiving`)
full.rx %>%
mutate(ma.p = filter(full.rx, Year == Year, Quarter == Quarter, county == "MA")$`% receiving`)
full.rx %>%
mutate(ma.p = filter(full.rx, Year == Year, Quarter == Quarter, County == "MA")$`% receiving`)
left_join(counties, by = "county_name") %>%
filter(state_name == "Massachusetts") %>%
filter(Year == 2018, Quarter == 1) %>%
ggplot(mapping = aes(long, lat, group = group, fill = `Percent of County Pop w/ Rx`)) +
labs(title = "Percent of Population Prescribed Schedule II Medications, by County")+
coord_map(projection = "albers", lat0 = 39, lat1 = 45)+
geom_polygon(color = "#ffffff", size = .25) +
theme_void() +
scale_fill_gradientn(colors = test)
full.rx %>%
mutate(ma.p = filter(full.rx, Year == Year, Quarter == Quarter, County == "MA")$`% receiving`) %>%
left_join(counties, by = "county_name") %>%
filter(state_name == "Massachusetts") %>%
filter(Year == 2018, Quarter == 1) %>%
ggplot(mapping = aes(long, lat, group = group, fill = `Percent of County Pop w/ Rx`)) +
labs(title = "Percent of Population Prescribed Schedule II Medications, by County")+
coord_map(projection = "albers", lat0 = 39, lat1 = 45)+
geom_polygon(color = "#ffffff", size = .25) +
theme_void() +
scale_fill_gradientn(colors = test)
View(full.rx)
mutate(ma.p = filter(full.rx, Year == Year, Quarter == Quarter, County == "MA")$`% receiving`)
ma.percents <- full.rx %>%
filter(County == "MA") %>%
select(Year, Quarter, `% receiving`) %>%
rename(ma.percent = `% receiving`)
ma.percents <- full.rx %>%
filter(County == "MA") %>%
select(Year, Quarter, `Percent of County Pop w/ Rx`) %>%
rename(ma.percent = `Percent of County Pop w/ Rx`)
full.rx %>%
left_join(ma.percents) %>%
mutate(difference = `Percent of County Pop w/ Rx` - ma.percent) %>%
# view()
filter(County != "MA") %>%
left_join(counties, by="county_name") %>%
filter(state_name == "Massachusetts") %>%
filter(year == 2016, quarter == 1) %>%
ggplot() +
aes(long, lat, group = group, fill = `difference`) +
geom_polygon(color = "white", size = 0.25) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme_void() +
scale_fill_distiller(type = "div", palette = "Spectral")
ma.percents <- full.rx %>%
filter(County == "MA") %>%
select(Year, Quarter, `Percent of County Pop w/ Rx`) %>%
rename(ma.percent = `Percent of County Pop w/ Rx`)
full.rx %>%
left_join(ma.percents) %>%
mutate(difference = `Percent of County Pop w/ Rx` - ma.percent) %>%
# view()
filter(County != "MA") %>%
left_join(counties, by="county_name") %>%
filter(state_name == "Massachusetts") %>%
filter(Year == 2016, quarter == 1) %>%
ggplot() +
aes(long, lat, group = group, fill = `difference`) +
geom_polygon(color = "white", size = 0.25) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme_void() +
scale_fill_distiller(type = "div", palette = "Spectral")
ma.percents <- full.rx %>%
filter(County == "MA") %>%
select(Year, Quarter, `Percent of County Pop w/ Rx`) %>%
rename(ma.percent = `Percent of County Pop w/ Rx`)
full.rx %>%
left_join(ma.percents) %>%
mutate(difference = `Percent of County Pop w/ Rx` - ma.percent) %>%
# view()
filter(County != "MA") %>%
left_join(counties, by="county_name") %>%
filter(state_name == "Massachusetts") %>%
filter(Year == 2016, Quarter == 1) %>%
ggplot() +
aes(long, lat, group = group, fill = `difference`) +
geom_polygon(color = "white", size = 0.25) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme_void() +
scale_fill_distiller(type = "div", palette = "Spectral")
View(ma.percents)
ma.percents <- full.rx %>%  #making a dataframe called ma.percents
filter(County == "MA") %>%  #we only want to look at "MA" in the County data
select(Year, Quarter, `Percent of County Pop w/ Rx`) %>%  #select picks only "year", "quarter", and that percent
rename(ma.percent = `Percent of County Pop w/ Rx`) #renaming so that a later join will result in a new column
full.rx %>% #piping in full.rx, and doing a left join with the dataframe that we just made
left_join(ma.percents)
ma.percents <- full.rx %>%  #making a dataframe called ma.percents
filter(County == "MA") %>%  #we only want to look at "MA" in the County data
select(Year, Quarter, `Percent of County Pop w/ Rx`) %>%  #select picks only "year", "quarter", and that percent
rename(ma.percent = `Percent of County Pop w/ Rx`) #renaming so that a later join will result in a new column
full.rx %>% #piping in full.rx, and doing a left join with the dataframe that we just made
left_join(ma.percents) %>% #bc full.rx is piped in, it's the left hand dataframe
mutate(difference = `Percent of County Pop w/ Rx` - ma.percent) %>% #making a column called "difference"...diff btwn county %age and MA %age
# view()
filter(County != "MA") %>% #removing MA county
left_join(counties, by="county_name") %>% #joining it into the counties dataframe, which we need to make a map
filter(state_name == "Massachusetts") %>%
filter(Year == 2016, Quarter == 1) %>%
ggplot() +
aes(long, lat, group = group, fill = `difference`) +
geom_polygon(color = "white", size = 0.25) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme_void() +
scale_fill_distiller(type = "div", palette = "Spectral")
ma.percents <- full.rx %>%  #making a dataframe called ma.percents
filter(County == "MA") %>%  #we only want to look at "MA" in the County data
select(Year, Quarter, `Percent of County Pop w/ Rx`) %>%  #select picks only "year", "quarter", and that percent
rename(ma.percent = `Percent of County Pop w/ Rx`) #renaming so that a later join will result in a new column
full.rx %>% #piping in full.rx, and doing a left join with the dataframe that we just made
left_join(ma.percents) %>% #bc full.rx is piped in, it's the left hand dataframe
mutate(difference = `Percent of County Pop w/ Rx` - ma.percent) %>% #making a column called "difference"...diff btwn county %age and MA %age
# view()
filter(County != "MA") %>% #removing MA county
left_join(counties, by="county_name") %>% #joining it into the counties dataframe, which we need to make a map
filter(state_name == "Massachusetts") %>%
filter(Year == 2016, Quarter == 1) %>%
ggplot() +
aes(long, lat, group = group, fill = `difference`) +
geom_polygon(color = "white", size = 0.25) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme_void() +
scale_fill_distiller(type = "div", palette = "PRGn") #type div = divergent--we want it to diverge from 0
ma.percents <- full.rx %>%  #making a dataframe called ma.percents
filter(County == "MA") %>%  #we only want to look at "MA" in the County data
select(Year, Quarter, `Percent of County Pop w/ Rx`) %>%  #select picks only "year", "quarter", and that percent
rename(ma.percent = `Percent of County Pop w/ Rx`) #renaming so that a later join will result in a new column
full.rx %>% #piping in full.rx, and doing a left join with the dataframe that we just made
left_join(ma.percents) %>% #bc full.rx is piped in, it's the left hand dataframe
mutate(difference = `Percent of County Pop w/ Rx` - ma.percent) %>% #making a column called "difference"...diff btwn county %age and MA %age
# view()
filter(County != "MA") %>% #removing MA county
left_join(counties, by="county_name") %>% #joining it into the counties dataframe, which we need to make a map
filter(state_name == "Massachusetts") %>%
filter(Year == 2016, Quarter == 1) %>%
ggplot() +
aes(long, lat, group = group, fill = `difference`) +
geom_polygon(color = "navy", size = 0.25) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme_void() +
scale_fill_distiller(type = "div", palette = "PRGn") #type div = divergent--we want it to diverge from 0
ma.percents <- full.rx %>%  #making a dataframe called ma.percents
filter(County == "MA") %>%  #we only want to look at "MA" in the County data
select(Year, Quarter, `Percent of County Pop w/ Rx`) %>%  #select picks only "year", "quarter", and that percent
rename(ma.percent = `Percent of County Pop w/ Rx`) #renaming so that a later join will result in a new column
full.rx %>% #piping in full.rx, and doing a left join with the dataframe that we just made
left_join(ma.percents) %>% #bc full.rx is piped in, it's the left hand dataframe
mutate(difference = `Percent of County Pop w/ Rx` - ma.percent) %>% #making a column called "difference"...diff btwn county %age and MA %age
# view()
filter(County != "MA") %>% #removing MA county
left_join(counties, by="county_name") %>% #joining it into the counties dataframe, which we need to make a map
filter(state_name == "Massachusetts") %>%
filter(Year == 2016, Quarter == 1) %>%
ggplot() +
aes(long, lat, group = group, fill = `difference`) +
geom_polygon(color = "gray", size = 0.25) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme_void() +
scale_fill_distiller(type = "div", palette = "PRGn") #type div = divergent--we want it to diverge from 0
ma.percents <- full.rx %>%  #making a dataframe called ma.percents
filter(County == "MA") %>%  #we only want to look at "MA" in the County data
select(Year, Quarter, `Percent of County Pop w/ Rx`) %>%  #select picks only "year", "quarter", and that percent
rename(ma.percent = `Percent of County Pop w/ Rx`) #renaming so that a later join will result in a new column
full.rx %>% #piping in full.rx, and doing a left join with the dataframe that we just made
left_join(ma.percents) %>% #bc full.rx is piped in, it's the left hand dataframe
mutate(difference = `Percent of County Pop w/ Rx` - ma.percent) %>% #making a column called "difference"...diff btwn county %age and MA %age
# view()
filter(County != "MA") %>% #removing MA county
left_join(counties, by="county_name") %>% #joining it into the counties dataframe, which we need to make a map
filter(state_name == "Massachusetts") %>%
filter(Year == 2016, Quarter == 1) %>%
ggplot() +
aes(long, lat, group = group, fill = `difference`) +
geom_polygon(color = "gray", size = 0.25) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme_void() +
scale_fill_distiller(type = "div", palette = "PRGn") + #type div = divergent--we want it to diverge from 0
labs(title = "Difference in % of Population Receiving Schedule II Rx: County vs MA State")
ma.percents <- full.rx %>%  #making a dataframe called ma.percents
filter(County == "MA") %>%  #we only want to look at "MA" in the County data
select(Year, Quarter, `Percent of County Pop w/ Rx`) %>%  #select picks only "year", "quarter", and that percent
rename(ma.percent = `Percent of County Pop w/ Rx`) #renaming so that a later join will result in a new column
full.rx %>% #piping in full.rx, and doing a left join with the dataframe that we just made
left_join(ma.percents) %>% #bc full.rx is piped in, it's the left hand dataframe
mutate(difference = `Percent of County Pop w/ Rx` - ma.percent) %>% #making a column called "difference"...diff btwn county %age and MA %age
# view()
filter(County != "MA") %>% #removing MA county
left_join(counties, by="county_name") %>% #joining it into the counties dataframe, which we need to make a map
filter(state_name == "Massachusetts") %>%
filter(Year == 2016, Quarter == 1) %>%
ggplot() +
aes(long, lat, group = group, fill = `difference`) +
geom_polygon(color = "gray", size = 0.25) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
theme_void() +
scale_fill_distiller(type = "div", palette = "PRGn") + #type div = divergent--we want it to diverge from 0
labs(title = "Difference from State % of Pop. Receiving Schedule 2 Rx by County")
shiny::runApp('C:/Users/Owner/Desktop/Learning R/MA_Rx/MA_Opioid_Rx')
runApp('C:/Users/Owner/Desktop/Learning R/MA_Rx/MA_Opioid_Rx')
runApp('C:/Users/Owner/Desktop/Learning R/MA_Rx')
runApp('C:/Users/Owner/Desktop/Learning R/MA_Rx')
runApp('C:/Users/Owner/Desktop/Learning R/MA_Rx')
runApp('C:/Users/Owner/Desktop/Learning R/MA_Rx')
runApp('C:/Users/Owner/Desktop/Learning R/MA_Rx')
runApp('C:/Users/Owner/Desktop/Learning R/MA_Rx')
